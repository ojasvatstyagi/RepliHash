apply plugin: 'java'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile group: 'com.typesafe.akka', name: 'akka-actor_2.11', version: '2.4.16'
	compile group: 'com.typesafe.akka', name: 'akka-remote_2.11', version: '2.4.16'
	compile group: 'com.typesafe.akka', name: 'akka-slf4j_2.11', version: '2.4.16'
	compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.9'
	compile group: 'commons-validator', name: 'commons-validator', version: '1.4.0'
	compile group: 'org.apache.commons', name: 'commons-csv', version: '1.4'

	compileOnly group: 'com.intellij', name: 'annotations', version: '12.0'

	testCompile group: 'com.typesafe.akka', name: 'akka-testkit_2.11', version: '2.4.16'
	testCompile group: 'com.github.stefanbirkner', name: 'system-rules', version: '1.16.0'
	testCompile group: 'com.google.guava', name: 'guava', version: '19.0'
}

/**
 * Custom Gradle task to run the Client CLI.
 * You can run the application in this way: ./gradlew node -Pmyargs="bootstrap"
 */
task node(type: JavaExec) {
	classpath sourceSets.main.runtimeClasspath
	jvmArgs = ['-ea']
	main = 'it.unitn.ds1.Node'

	// this way we can pass some parameters to the java app
	if (project.hasProperty('myargs')) {
		args(myargs.split(' '))
	}
}

/**
 * Custom Gradle task to run the Client CLI.
 * You can run the application in this way: ./gradlew client -Pmyargs="127.0.0.1 111 leave"
 */
task client(type: JavaExec) {
	classpath sourceSets.main.runtimeClasspath
	jvmArgs = ['-ea']
	main = 'it.unitn.ds1.Client'

	// this way we can pass some parameters to the java app
	if (project.hasProperty('myargs')) {
		args(myargs.split(' '))
	}
}
